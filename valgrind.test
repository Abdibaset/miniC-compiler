#!/bin/bash
VERSION=1.0
ARCH=x86_64

# Check arguments
if [ $# -lt 1 ]; then
    echo "usage: valgrind.test <filename.c> <inputfile[arg]>"
    exit 1  # Added exit after the error message
fi

f="$1"
shift

if [ ! -x "$f" ]; then
    echo -e "\033[91mFailed\033[0m   :${f} cannot be executed"
    exit 1
fi

# Corrected the command to execute valgrind
valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --error-exitcode=1 "$f" "${@}" 2>&1 | tee valgrind.log

status=$? # exit status of command above
grep "no leaks" valgrind.log > /dev/null
leaks=$? # exit status of command above
grep "0 errors" valgrind.log > /dev/null
errors=$? # exit status of command above

if [ ${status} -ne 0 ] || [ ${leaks} -ne 0 ] || [ ${errors} -ne 0 ]; then
    echo -e "\033[91mFailed\033[0m   : valgrind found errors or memory leaks running ${executable_file}"
    exit 1
else
    echo -e "Success: ${f} ran without any errors or leaks"
fi

rm -f "valgrind.log"
exit 0
